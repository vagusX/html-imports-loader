module.exports = function(meta) {
  return ("var React = require('react')\nvar ReactDOM = require('react-dom')\nvar syncEvent = require('html-imports-loader/react/syncEvent')\nvar htmlModuleLoader = require('html-imports-loader/react/htmlModuleLoader')\n\nmodule.exports = (function (superclass) {\n  function ReactComponent () {\n    superclass.apply(this, arguments);\n  }\n\n  if ( superclass ) ReactComponent.__proto__ = superclass;\n  ReactComponent.prototype = Object.create( superclass && superclass.prototype );\n  ReactComponent.prototype.constructor = ReactComponent;\n\n  var staticAccessors = { displayName: {} };\n\n  staticAccessors.displayName.get = function () {\n      return '" + (meta.tagName) + "';\n    };\n    ReactComponent.prototype.componentDidMount = function componentDidMount () {\n      var this$1 = this;\n\t  this$1.componentWillReceiveProps(this$1.props);\n      htmlModuleLoader(['" + (meta.url) + "'], function () {\n        this$1.componentWillReceiveProps(this$1.props);\n      }, function(e) {\n        console.err('Load html module failed:', e)\n      });\n    };\n    ReactComponent.prototype.componentWillReceiveProps = function componentWillReceiveProps (props) {\n      var node = ReactDOM.findDOMNode(this);\n      Object.keys(props).forEach(function (name) {\n        if (name === 'children' || name === 'style') {\n          return;\n        }\n\n        if (name.indexOf('on') === 0 && name[2] === name[2].toUpperCase()) {\n          syncEvent(node, name.substring(2), props[name]);\n        } else {\n          node[name] = props[name];\n        }\n      });\n    };\n    ReactComponent.prototype.render = function render () {\n      return React.createElement('" + (meta.tagName) + "', { style: this.props.style }, this.props.children);\n    };\n\n  Object.defineProperties( ReactComponent, staticAccessors );\n\n  return ReactComponent;\n}(React.Component))")
}
